#!/usr/bin/env python3

import os, sys, argparse, re, shutil, syslog, time

def retrieve_files(directory, file_list, regex):
    for f in os.listdir(directory):
        match = re.search("{0}".format(regex), f)
        if match:
            file_list.append(os.path.join(directory, f))

def move_files(file_list, directory):
    for f in file_list:
        shutil.move(f, directory)

def delete_old_files(directory, filetime, deleted_files):
    max_time = time.time() - filetime

    for f in os.listdir(directory):
        full_path = os.path.join(directory, f)
        stat = os.stat(full_path)

        if stat.st_mtime < max_time:
            os.remove(full_path)
            deleted_files.append(full_path)

def main():
    file_list = []
    message = ""
    destination_directory = ""
    SHARE_DIR = "/media/share"
    FILE_PATTERN = r"^.*_[0-9]{4}-[0-9]{2}-[0-9]{2}\.tar\.(gz|bz2)$"
    # 7 days in seconds
    MAX_DAY = 7
    MAX_TIME = MAX_DAY * 24 * 60 * 60
    deleted_files = []
    parser = argparse.ArgumentParser()

    destination_directory = "{0}/{1}/backups".format(SHARE_DIR, os.getenv('USER'))
    
    syslog.openlog(logoption=syslog.LOG_PID, facility=syslog.LOG_USER)

    parser.add_argument('-d', '--directory', help="Directory to backup and delete old files", required=True)
    args = parser.parse_args()

    directory = args.directory
    if not os.path.exists(directory):
        message = "{0} does not exits".format(directory)
        print(message, file=sys.stdout)
        syslog.syslog(syslog.LOG_ERR, message)

        sys.exit(1)

    retrieve_files(directory, file_list, FILE_PATTERN)
    if len(file_list) > 0:
        for f in file_list:
            message = "{0} found".format(f)
            print(message)
            syslog.syslog(syslog.LOG_INFO, message)

        move_files(file_list, destination_directory)
        for f in file_list:
            message = "{0} moved to {1}".format(f, destination_directory)
            print(message)
            syslog.syslog(syslog.LOG_INFO, message)
    else:
        message = "No files found in {0}".format(directory)
        print(message)
        syslog.syslog(syslog.LOG_ERR, message)

    delete_old_files(destination_directory, MAX_TIME, deleted_files)
    if len(deleted_files) > 0:
        for f in deleted_files:
            message = "{0} successfully deleted".format(f)
            print(message)
            syslog.syslog(syslog.LOG_INFO, message)
    else:
        message = "All files in {0} are newer than {1} days".format(destination_directory, MAX_DAY)
        print(message)
        syslog.syslog(syslog.LOG_INFO, message)

    sys.exit(0)

if __name__ == "__main__":
    main()
